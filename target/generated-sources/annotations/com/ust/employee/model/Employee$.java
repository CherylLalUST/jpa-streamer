package com.ust.employee.model;

import com.speedment.jpastreamer.field.IntField;
import com.speedment.jpastreamer.field.StringField;

/**
 * The generated base for entity {@link Employee} representing entities of the
 * {@code employee}-table in the database.
 * <p> This file has been automatically generated by JPAStreamer.
 * 
 * @author JPAStreamer
 */
public final class Employee$ {
    
    /**
     * This Field corresponds to the {@link Employee} field
     * "experienceInCurrentDomain".
     */
    public static final IntField<Employee> experienceInCurrentDomain = IntField.create(
        Employee.class,
        "experienceInCurrentDomain",
        Employee::getExperienceInCurrentDomain,
        false
    );
    /**
     * This Field corresponds to the {@link Employee} field "age".
     */
    public static final IntField<Employee> age = IntField.create(
        Employee.class,
        "age",
        Employee::getAge,
        false
    );
    /**
     * This Field corresponds to the {@link Employee} field "education".
     */
    public static final StringField<Employee> education = StringField.create(
        Employee.class,
        "education",
        Employee::getEducation,
        false
    );
    /**
     * This Field corresponds to the {@link Employee} field "paymentTier".
     */
    public static final IntField<Employee> paymentTier = IntField.create(
        Employee.class,
        "paymentTier",
        Employee::getPaymentTier,
        false
    );
    /**
     * This Field corresponds to the {@link Employee} field "everBenched".
     */
    public static final StringField<Employee> everBenched = StringField.create(
        Employee.class,
        "everBenched",
        Employee::getEverBenched,
        false
    );
    /**
     * This Field corresponds to the {@link Employee} field "id".
     */
    public static final IntField<Employee> id = IntField.create(
        Employee.class,
        "id",
        Employee::getId,
        false
    );
    /**
     * This Field corresponds to the {@link Employee} field "joiningYear".
     */
    public static final IntField<Employee> joiningYear = IntField.create(
        Employee.class,
        "joiningYear",
        Employee::getJoiningYear,
        false
    );
    /**
     * This Field corresponds to the {@link Employee} field "gender".
     */
    public static final StringField<Employee> gender = StringField.create(
        Employee.class,
        "gender",
        Employee::getGender,
        false
    );
    /**
     * This Field corresponds to the {@link Employee} field "leaveOrNot".
     */
    public static final IntField<Employee> leaveOrNot = IntField.create(
        Employee.class,
        "leaveOrNot",
        Employee::getLeaveOrNot,
        false
    );
    /**
     * This Field corresponds to the {@link Employee} field "city".
     */
    public static final StringField<Employee> city = StringField.create(
        Employee.class,
        "city",
        Employee::getCity,
        false
    );
}